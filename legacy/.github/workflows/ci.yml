name: Build

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-linux:
    name: Linux Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Restore Conan cache
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: ${{ runner.os }}-conan-${{ hashFiles('**/conanfile.*', '**/conan.lock') }}
          restore-keys: |
            ${{ runner.os }}-conan-

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip cmake \
                              libgl-dev libgl1-mesa-dev \
                              libxinerama-dev libxcursor-dev libxi-dev \
                              libx11-xcb-dev libfontenc-dev libice-dev \
                              libsm-dev libxau-dev libxaw7-dev libxcomposite-dev \
                              libxdamage-dev libxkbfile-dev libxmu-dev libxmuu-dev \
                              libxpm-dev libxres-dev libxss-dev libxt-dev libxtst-dev \
                              libxv-dev libxxf86vm-dev libxcb-glx0-dev libxcb-render0-dev \
                              libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev \
                              libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev \
                              libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev \
                              libxcb-xinerama0-dev libxcb-dri3-dev uuid-dev \
                              libxcb-cursor-dev libxcb-dri2-0-dev libxcb-present-dev \
                              libxcb-composite0-dev libxcb-ewmh-dev libxcb-res0-dev \
                              libx11-dev libx11-xcb-dev libfontenc-dev libice-dev \
                              libsm-dev libxau-dev libxaw7-dev libxrandr-dev \
                              libxcb-util-dev libxcb-util0-dev
          python3 -m venv .venv
          source .venv/bin/activate
          python3 -m pip install conan

      - name: Setup Python + Conan
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          python3 -m pip install --upgrade pip
          python3 -m pip install conan

      - name: Conan install
        run: |
          source .venv/bin/activate
          conan profile detect --force
          conan install . --output-folder=build/conan --build=missing

      - name: Build project
        run: |
          source .venv/bin/activate
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=build/conan/conan_toolchain.cmake
          cmake --build build

      - name: Run all test binaries
        run: |
          set -e
          for test_bin in ./build/bin/*_test; do
            if [ -x "$test_bin" ]; then
              echo "Running $test_bin"
              "$test_bin"
            fi
          done

  build-macos:
    name: macOS Build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Restore Conan cache
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: ${{ runner.os }}-conan-${{ hashFiles('**/conanfile.*', '**/conan.lock') }}
          restore-keys: |
            ${{ runner.os }}-conan-

      - name: Install dependencies
        run: |
          brew install python3 cmake llvm
          python3 -m venv .venv
          source .venv/bin/activate
          python3 -m pip install --upgrade pip
          python3 -m pip install conan

      - name: Conan install
        run: |
          source .venv/bin/activate
          conan profile detect --force
          conan install . --output-folder=build/conan --build=missing

      - name: Build project
        run: |
          source .venv/bin/activate
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=build/conan/conan_toolchain.cmake
          cmake --build build

      - name: Run all test binaries
        run: |
          set -e
          for test_bin in ./build/bin/*_test; do
            if [ -x "$test_bin" ]; then
              echo "Running $test_bin"
              "$test_bin"
            fi
          done
